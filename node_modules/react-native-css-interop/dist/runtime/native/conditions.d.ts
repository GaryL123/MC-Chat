import type { ContainerCondition, Declaration, MediaQuery } from "lightningcss";
import { AttributeCondition, ExtractedContainerQuery, InteropStore, PseudoClassesQuery, SignalLike } from "../../types";
interface ConditionReference {
    width: number | SignalLike<number>;
    height: number | SignalLike<number>;
}
export declare function testMediaQueries(mediaQueries: MediaQuery[]): boolean;
export declare function testMediaQuery(mediaQuery: MediaQuery, conditionReference?: ConditionReference): boolean;
export declare function testPseudoClasses(state: InteropStore, meta: PseudoClassesQuery): boolean;
export declare function testContainerQuery(state: InteropStore, containerQuery: ExtractedContainerQuery[] | undefined): boolean;
export declare function testCondition(condition: ContainerCondition<Declaration> | null | undefined, conditionReference: ConditionReference): boolean;
export declare function getTestAttributeValue(props: Record<string, any>, condition: AttributeCondition): any;
export declare function testAttribute(propValue: any, condition: AttributeCondition): boolean;
export {};
