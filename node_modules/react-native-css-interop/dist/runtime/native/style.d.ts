import type { Time } from "lightningcss";
import { AnimatableValue } from "react-native-reanimated";
import type { GroupedTransportStyles, RuntimeValueDescriptor, RuntimeStyle, RuntimeValue, InteropStore, NormalizedOptions } from "../../types";
export declare function createInteropStore(parent: InteropStore, options: NormalizedOptions, originalProps: Record<string, any>): {
    state: InteropStore;
    subscribe(subscriber: () => void): () => void;
    snapshot(): number;
};
export declare function upsertStyleSignal(name: string, groupedStyleMeta: GroupedTransportStyles): void;
export declare function reduceStyles(state: InteropStore, targetProp: string, styles: Array<RuntimeStyle | object>, _scope: number, treatAsInline?: boolean): InteropStore;
export declare function parseValue(value: RuntimeValueDescriptor | string | number | boolean): RuntimeValue;
export declare function resolveAnimationValue(value: RuntimeValueDescriptor, prop: string, style?: Record<string, any>): any;
export declare function specificityCompare(o1: object | RuntimeStyle, o2: object | RuntimeStyle, treatAsInline?: boolean): number;
export declare const timeToMS: (time: Time) => number;
export declare const defaultValues: Record<string, AnimatableValue | (() => AnimatableValue)>;
