import { prettierFormatter } from './formatters/prettier';
import { unstringSnapshotSerializer } from './serializers/unstring-snapshot';
import type { ResultFormatter, PluginTesterOptions } from './types';
/**
 * A unique symbol that, when included in `babelOptions.plugins`, will be
 * replaced with the plugin under test. Use this symbol to create a custom
 * plugin run order.
 *
 * @see https://npm.im/babel-plugin-tester#custom-plugin-and-preset-run-order
 */
declare const runPluginUnderTestHere: unique symbol;
/**
 * A unique symbol that, when included in `babelOptions.presets`, will be
 * replaced with the preset under test. Use this symbol to create a custom
 * preset run order.
 *
 * @see https://npm.im/babel-plugin-tester#custom-plugin-and-preset-run-order
 */
declare const runPresetUnderTestHere: unique symbol;
/**
 * Valid choices for the `titleNumbering` babel-plugin-tester option.
 */
declare const validTitleNumberingValues: readonly ["all", "tests-only", "fixtures-only", false];
/**
 * Valid choices for the `endOfLine` babel-plugin-tester option.
 */
declare const validEndOfLineValues: readonly ["lf", "crlf", "auto", "preserve", false];
/**
 * This function has the same effect as calling `pluginTester` with
 * `restartTitleNumbering: true`.
 */
declare function restartTestTitleNumbering(): void;
/**
 * An abstraction around babel to help you write tests for your babel plugin or
 * preset.
 */
declare function pluginTester(options?: PluginTesterOptions): void;
declare namespace pluginTester {
    var _a: typeof import("./plugin-tester").default;
    export var pluginTester: typeof import("./plugin-tester").default;
    export var restartTestTitleNumbering: typeof import("./plugin-tester").restartTestTitleNumbering;
    export var prettierFormatter: ResultFormatter<{
        prettierOptions: import("prettier").Options | null;
        config: import("prettier").Options | null;
    }>;
    export var unstringSnapshotSerializer: import("pretty-format").Plugin;
    export var runPluginUnderTestHere: unique symbol;
    export var runPresetUnderTestHere: unique symbol;
    export var validTitleNumberingValues: readonly ["all", "tests-only", "fixtures-only", false];
    export var validEndOfLineValues: readonly ["lf", "crlf", "auto", "preserve", false];
    export { _a as default };
}
export { pluginTester as default, pluginTester, restartTestTitleNumbering, prettierFormatter, unstringSnapshotSerializer, runPluginUnderTestHere, runPresetUnderTestHere, validTitleNumberingValues, validEndOfLineValues };
export * from './types';
